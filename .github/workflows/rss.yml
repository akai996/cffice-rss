name: Build RSS & Package site files (local repo) + optional notify

on:
  push:
    branches: [ main ]
    paths:
      - 'sitemap.xml'
      - 'resources.html'
      - 'robots.txt'
      - '.github/workflows/site-pack.yml'
  workflow_dispatch:
    inputs:
      notify_after_deploy:
        description: '已由运维部署到服务器后，是否同时通知 PubSubHubbub + Ping Google/Bing? (true/false)'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure required files exist
        run: |
          for f in sitemap.xml resources.html robots.txt; do
            [ -f "$f" ] || { echo "::error file=$f::File not found"; exit 1; }
          done

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Generate rss.xml from local sitemap.xml
        run: |
          python - <<'PY'
import datetime, xml.etree.ElementTree as ET
from urllib.parse import urlparse
from xml.sax.saxutils import escape

SITEMAP_PATH = "sitemap.xml"
RSS_URL = "https://www.cfiee-edu.com/rss.xml"               # 线上最终访问地址
HUB_URL = "https://pubsubhubbub.appspot.com/"

# 解析本地 sitemap.xml
root = ET.parse(SITEMAP_PATH).getroot()
ns = {"sm": "http://www.sitemaps.org/schemas/sitemap/0.9"}
urls = []
for url in root.findall("sm:url", ns):
    loc = (url.findtext("sm:loc", default="", namespaces=ns) or "").strip()
    lastmod = (url.findtext("sm:lastmod", default="", namespaces=ns) or "").strip()
    if loc:
        urls.append((loc, lastmod))

# RSS 头信息
tz = datetime.timezone(datetime.timedelta(hours=8))
now_rfc2822 = datetime.datetime.now(tz).strftime("%a, %d %b %Y %H:%M:%S %z")

def to_rfc2822(d):
    try:
        dt = datetime.datetime.strptime(d[:10], "%Y-%m-%d").replace(tzinfo=tz)
    except Exception:
        dt = datetime.datetime.now(tz)
    return dt.strftime("%a, %d %b %Y %H:%M:%S %z")

items = []
for loc, lastmod in urls:
    title = (urlparse(loc).path.strip('/') or 'Home')
    pub = to_rfc2822(lastmod)
    items.append(f"""  <item>
    <title>{escape(title)}</title>
    <link>{escape(loc)}</link>
    <guid isPermaLink="true">{escape(loc)}</guid>
    <pubDate>{pub}</pubDate>
    <description>Change the status quo — economic education can change lives.</description>
  </item>""")

rss = f"""<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CFIEE · Council for International Economic Education</title>
    <link>https://www.cfiee-edu.com/</link>
    <description>Change the status quo — economic education can change lives.</description>
    <language>de</language>
    <lastBuildDate>{now_rfc2822}</lastBuildDate>
    <atom:link href="{RSS_URL}" rel="self" type="application/rss+xml" />
    <atom:link href="{HUB_URL}" rel="hub" />
{chr(10).join(items)}
  </channel>
</rss>"""

open("rss.xml","w",encoding="utf-8").write(rss)
print("rss.xml generated with", len(items), "items")
PY

      - name: Upload single files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-files
          path: |
            rss.xml
            sitemap.xml
            resources.html
            robots.txt

      - name: Create ZIP package (optional)
        run: |
          zip -9r site-files-pack.zip rss.xml sitemap.xml resources.html robots.txt
      - name: Upload ZIP package
        uses: actions/upload-artifact@v4
        with:
          name: site-files-pack
          path: site-files-pack.zip

  notify-after-deploy:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.notify_after_deploy == 'true' }}
    needs: build-and-package
    runs-on: ubuntu-latest
    steps:
      - name: Notify PubSubHubbub Hub (assumes rss.xml already deployed online)
        run: |
          curl -sS -X POST https://pubsubhubbub.appspot.com/notify \
               --data-urlencode "hub.mode=publish" \
               --data-urlencode "hub.url=https://www.cfiee-edu.com/rss.xml"
          echo "Notified PubSubHubbub Hub."

      - name: Ping Google & Bing Sitemap (assumes sitemap.xml already deployed online)
        run: |
          curl -s "https://www.google.com/ping?sitemap=https://www.cfiee-edu.com/sitemap.xml"
          curl -s "https://www.bing.com/ping?sitemap=https://www.cfiee-edu.com/sitemap.xml"
          echo "Pinged Google & Bing."
