name: Site Pack Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Generate rss.xml from local sitemap.xml
        run: |
          set -euo pipefail
          cat > script.py << 'EOF'
          import datetime
          import xml.etree.ElementTree as ET
          from urllib.parse import urlparse
          from xml.sax.saxutils import escape
          from pathlib import Path

          SITEMAP_PATH = "sitemap.xml"
          RSS_PUBLIC_URL = "https://www.cfiee-edu.com/rss.xml"
          HUB_URL = "https://pubsubhubbub.appspot.com/"

          # Parse sitemap
          root = ET.parse(SITEMAP_PATH).getroot()
          ns = {"sm": "https://www.sitemaps.org/schemas/sitemap/0.9"}

          urls = []
          for u in root.findall("sm:url", ns):
              loc = (u.findtext("sm:loc", default="", namespaces=ns) or "").strip()
              lastmod = (u.findtext("sm:lastmod", default="", namespaces=ns) or "").strip()
              if loc:
                  urls.append((loc, lastmod))

          # Timezone: UTC+8
          tz = datetime.timezone(datetime.timedelta(hours=8))
          now = datetime.datetime.now(tz)
          now_rfc2822 = now.strftime("%a, %d %b %Y %H:%M:%S %z")

          def to_rfc2822(d: str) -> str:
              try:
                  dt = datetime.datetime.strptime(d[:10], "%Y-%m-%d").replace(tzinfo=tz)
              except Exception:
                  dt = now
              return dt.strftime("%a, %d %b %Y %H:%M:%S %z")

          items = []
          for loc, lastmod in urls[:200]:
              path_title = urlparse(loc).path.strip("/") or "Home"
              title = path_title.replace("-", " ").replace("_", " ").title()
              pub = to_rfc2822(lastmod)
              items.append(
                  "  <item>\n"
                  f"    <title>{escape(title)}</title>\n"
                  f"    <link>{escape(loc)}</link>\n"
                  f"    <guid isPermaLink=\"true\">{escape(loc)}</guid>\n"
                  f"    <pubDate>{pub}</pubDate>\n"
                  f"    <description>{escape('Change the status quo - economic education can change lives.')}</description>\n"
                  "  </item>"
              )

          rss_head = (
              '<?xml version="1.0" encoding="UTF-8"?>\n'
              '<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">\n'
              '  <channel>\n'
              '    <title>CFIEE - Council for International Economic Education</title>\n'
              '    <link>https://www.cfiee-edu.com/</link>\n'
              f'    <description>{escape("Change the status quo - economic education can change lives.")}</description>\n'
              '    <language>en</language>\n'
              f'    <lastBuildDate>{now_rfc2822}</lastBuildDate>\n'
              f'    <atom:link href="{RSS_PUBLIC_URL}" rel="self" type="application/rss+xml" />\n'
              f'    <atom:link href="{HUB_URL}" rel="hub" />\n'
          )

          rss = rss_head + '\n'.join(items) + '\n  </channel>\n</rss>\n'
          Path("rss.xml").write_text(rss, encoding="utf-8")
          print("rss.xml generated with", len(items), "items")
          EOF
          
          python script.py
